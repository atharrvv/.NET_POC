pipeline:
  name: poc
  identifier: poc
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GitHub
        repoName: .NET_POC
        build: <+input>
  stages:
    - stage:
        name: "Docker Database "
        identifier: Docker
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
            paths: []
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone_1
                  identifier: GitClone_1
                  spec:
                    connectorRef: GitHub
                    repoName: .NET_POC
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Database Build
                  identifier: Database_Build
                  spec:
                    connectorRef: Dockerhub
                    repo: eatherv/database
                    tags:
                      - latest
                    dockerfile: ./TextEditor/database/Dockerfile
              - parallel:
                  - step:
                      type: Background
                      name: dind
                      identifier: dind
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:dind
                        shell: Sh
                        command: docker run --name databse -d -p 1433:1433 eatherv/database:latest
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: docker_v2
                          tag: latest
                          name: eatherv/database
                  - step:
                      type: Grype
                      name: Grype_1
                      identifier: Grype_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: docker_v2
                          tag: latest
                          name: eatherv/database
          sharedPaths:
            - /var/run
    - stage:
        name: Docker Backend
        identifier: Docker_Backend
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Backend Build
                  identifier: Backend_Build
                  spec:
                    connectorRef: Dockerhub
                    repo: eatherv/backend:latest
                    tags:
                      - latest
                    dockerfile: ./TextEditor/Dockerfile
